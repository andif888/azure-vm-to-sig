name: generate_new_image_version

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      azure_sig_image_version_name:
        required: true
        description: 'Specify the new Image Version (e.g. 1.0.0)'
      azure_source_vm_name:
        required: true
        description: 'Specify the name of the source VM'
      azure_source_resource_group_name:
        required: true
        description: 'Specify the name of the Resource Group of the source VM'
        default: 'rg-test'

jobs:
  build_job:
    name: build_job
    runs-on: ubuntu-latest

    container:
      image: andif888/docker-pataz

    steps:
    - name: checkout repo
      uses: actions/checkout@v2

    - name: show versions
      run: |
        ansible --version
        packer --version
        terraform --version
        az --version

    - name: ssh_setup
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        echo -n ${{ secrets.envfile }} > .env && source .env
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null

    - name: ansible playbook
      id: ansible_playbook
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        echo -n ${{ secrets.envfile }} > .env && source .env
        cd ansible
        ansible-galaxy collection install -v -r requirements.yml
        export azure_source_resource_group_name=${{ github.event.inputs.azure_source_resource_group_name }}
        export azure_source_vm_name=${{ github.event.inputs.azure_source_vm_name }}
        export azure_sig_image_version_name=${{ github.event.inputs.azure_sig_image_version_name }}
        ansible-playbook -i inventory playbook.yml
